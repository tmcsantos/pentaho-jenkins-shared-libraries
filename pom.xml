<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.hitachivantara.ci</groupId>
  <artifactId>jenkins-shared-libraries</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Jenkins Shared Libraries</name>
  <description>Shared libraries to support Hitachi Vantara Jenkins project builds</description>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

  <scm>
    <developerConnection>https://github.com/pentaho/jenkins-shared-libraries.git</developerConnection>
    <url>https://github.com/pentaho/jenkins-shared-libraries</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Sonar -->
    <sonar.host.url>http://sonar.pentaho.net</sonar.host.url>
    <sonar.projectName>${project.artifactId}</sonar.projectName>
    <sonar.sources>src,vars</sonar.sources>
    <sonar.tests>test/src</sonar.tests>
    <sonar.coverage.exclusions>vars/**</sonar.coverage.exclusions> <!-- We can't get metrics on loaded scripts yet -->

    <!-- skip site, we don't need it now and it errors out -->
    <maven.site.skip>true</maven.site.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-core</artifactId>
      <version>2.164.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-api</artifactId>
      <version>2.34</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hitachivantara.ci.plugins</groupId>
      <artifactId>pipeline-ci-utility-steps</artifactId>
      <version>1.21</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkinsci.plugins</groupId>
      <artifactId>pipeline-model-definition</artifactId>
      <version>1.2.9</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-cps</artifactId>
      <version>2.64</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>docker-workflow</artifactId>
      <version>1.17</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>pipeline-utility-steps</artifactId>
      <version>2.2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-cps-global-lib</artifactId>
      <version>2.13</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>2.4.12</version>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>1.3-groovy-2.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.cloudbees</groupId>
      <artifactId>groovy-cps</artifactId>
      <version>1.25</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency><!-- enables mocking of classes (in addition to interfaces) -->
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>3.2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.lesfurets</groupId>
      <artifactId>jenkins-pipeline-unit</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!--
    set the source directory to something that does not exist so
    the gmavenplus is able to add the sources properly
    -->
    <sourceDirectory>none</sourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.1.1688</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>1.8.0</version>
        <executions>
          <execution>
            <goals>
              <goal>addSources</goal>
              <goal>addTestSources</goal>
              <goal>compile</goal>
              <goal>compileTests</goal>
            </goals>
            <configuration>
              <sources>
                <source>
                  <directory>vars</directory>
                  <includes>
                    <include>**/*.groovy</include>
                  </includes>
                </source>
                <source>
                  <directory>src</directory>
                  <includes>
                    <include>**/*.groovy</include>
                  </includes>
                </source>
              </sources>
              <testSources>
                <testSource>
                  <directory>test/src</directory>
                  <includes>
                    <include>**/*.groovy</include>
                  </includes>
                </testSource>
              </testSources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>audit</id>
      <activation>
        <property>
          <name>audit</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.4</version>
            <configuration>
              <excludes>
                <!-- closures are created at runtime with no source attached, useless for cov reporting -->
                <exclude>**/*$*_closure*</exclude>
                <!-- we don't care about constants or exceptions -->
                <exclude>**/LibraryProperties*</exclude>
                <exclude>**/*Exception*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>jacoco-prepare</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>jacoco-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
